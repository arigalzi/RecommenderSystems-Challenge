# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

<<<<<<< HEAD
# C extensions
*.so

# Distribution / packaging
.Python
=======
# IDEA
.idea/*

# DATA FILES
Data_manager_split_datasets/**
Data_manager_offline_datasets/**
result_experiments/**

**/.pytest_cache/*


# Ignore cython compiled files
**/Cython/*.pyd
**/Cython/*.so
**/Cython/*.html
**/Cython/*.c
**/Cython/build/*
**/Cython_examples/*.pyd
**/Cython_examples/*.so
**/Cython_examples/*.html
**/Cython_examples/*.c
**/Cython_examples/build/*

# Distribution / packaging
.Python
env/
>>>>>>> 9c42c012fe868d85c5b339331a31b0136ed12004
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
<<<<<<< HEAD
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST
=======
*.egg-info/
.installed.cfg
*.egg
>>>>>>> 9c42c012fe868d85c5b339331a31b0136ed12004

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
<<<<<<< HEAD
.nox/
=======
>>>>>>> 9c42c012fe868d85c5b339331a31b0136ed12004
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
<<<<<<< HEAD
*.py,cover
.hypothesis/
.pytest_cache/
=======
.hypothesis/
>>>>>>> 9c42c012fe868d85c5b339331a31b0136ed12004

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
<<<<<<< HEAD
db.sqlite3
db.sqlite3-journal
=======
>>>>>>> 9c42c012fe868d85c5b339331a31b0136ed12004

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

<<<<<<< HEAD
# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid
=======
# pyenv
.python-version

# celery beat schedule file
celerybeat-schedule
>>>>>>> 9c42c012fe868d85c5b339331a31b0136ed12004

# SageMath parsed files
*.sage.py

<<<<<<< HEAD
# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
=======
# dotenv
.env

# virtualenv
.venv
venv/
ENV/
>>>>>>> 9c42c012fe868d85c5b339331a31b0136ed12004

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
<<<<<<< HEAD
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

.DS_Store
=======

.DS_Store
.idea
Results/
>>>>>>> 9c42c012fe868d85c5b339331a31b0136ed12004
